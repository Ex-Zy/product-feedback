import{s as y,P as S,g as u,B as m}from"./index-Dg8G8UHJ.js";import{A as B,e as l,M as a,L as v,a as T,b as p}from"./feedback-X9mXlhwO.js";async function h(){const t=await fetch(B);if(!t.ok)throw new Error(`${t.status} - ${t.statusText}`);return await t.json()}function C(t){return e=>t==="all"||t===e.category}function E(t){return(e,s)=>{const o=e.comments?l(e.comments):0,r=s.comments?l(s.comments):0;return t===a?s.upvotes-e.upvotes:t===v?e.upvotes-s.upvotes:t===T?r-o:t===p?o-r:0}}function M(t,e){const{filterBy:s,sortBy:o}=y(O());return s.value=e.filterBy,o.value=e.sortBy,t.filter(C(e.filterBy)).sort(E(e.sortBy))}const O=S("suggestions",()=>{const t=u(!0),e=u(null),s=u([]),o=u(a),r=u("all"),f=m(()=>s.value.length);async function c(i={filterBy:"all",sortBy:a}){t.value=!0;try{const n=await h();return n?M(n,i):void 0}catch(n){e.value="Failed to fetch any suggestions",console.log(n)}finally{t.value=!1}}async function g(i={}){const n=await c({sortBy:i.sortBy??o.value,filterBy:i.filterBy??r.value});n&&(s.value=n)}return{suggestions:s,suggestionsAmount:f,loader:t,error:e,filterBy:r,sortBy:o,fetchSuggestions:c,loadSuggestionsToStore:g}});export{O as u};
